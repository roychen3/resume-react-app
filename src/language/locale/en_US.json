{
  "languages": "Languages: ",
  "webCoverTitle": "RESUME",
  "webMenu": {
    "about": "ABOUT",
    "skill": "SKILL",
    "experience": "EXPERIENCE",
    "contact": "CONTACT"
  },
  "about": {
    "name": "Roy Chen",
    "jobTitle": "Front-end developer",
    "education": "Asia Eastern University of Science and Technology",
    "introduction": {
      "section1": "I am a frontend engineer specializing in React, with years of development experience. I have participated in and built multiple projects, gaining expertise in the micro-frontend architecture. I prioritize code maintainability and am committed to writing high-quality, scalable frontend applications."
    },
    "skill": {
      "frontEnd": "Front-End",
      "backEnd": "Back-End",
      "other": "Other"
    }
  },
  "experience": {
    "useSkill": "Use of skills: ",
    "pentium-network": {
      "companyName": "Pentium Network Technology Ltd",
      "jobTitle": "Front-end Developer",
      "period": "2022.11 - PRESENT",
      "instruction": "● Built main applications and micro frontend projects using Webpack5 and Module Federation.\n● Implemented CI code checks with GitHub Actions.\n● Wrote unit tests using Jest and component tests with React Testing Library.\n● Implemented multilingual support with i18next.\n● Replaced Webpack with Rsbuild for faster builds and adopted Module Federation 2.0.\n● Replaced Jest with Vitest for faster test execution.\nProjects:\n● Developed the \"<rapd-link>RAPD</rapd-link>\" product:\n　○ Built a micro frontend architecture using Vite, Webpack5, and Module Federation.\n　○ Integrated Auth0 for authentication.\n　○ Developed micro apps for RAPD features.\n● Developed a Component Library:\n　○ Built shared components using Antd, enabling reuse across products and micro frontends to save development time and maintain UI consistency.\n　○ Bundled with Rollup and published to the company's private npm server.\n　○ Documented components and examples using Storybook.\n　○ Designed a Theme & i18n system.\n　○ Created a CSS cache mechanism to optimize component styles.\n　○ Developed 'Upload', 'UploadModal', 'SelectionArea', and 'SearchFilter' components.\n● Designed and developed a Micro Frontends Framework:\n　○ Built a micro frontend framework to help developers focus on feature development.\n　○ Used MobX for state management between micro apps.\n　○ Designed communication interfaces for the main app and micro apps.\n● Developed the \"create micro app\" CLI:\n　○ Built a CLI with TypeScript to help developers quickly scaffold micro frontend projects.\n● Maintained \"<mrvn-link>MRVN</mrvn-link>\":\n　○ Integrated React micro frontends into a Vue app using Webpack5 and Module Federation.\n　○ Developed micro apps for MRVN features.\n● Maintained \"<mavis-link>MAVIS</mavis-link>\".\n● Maintained \"<gateone-link>GateOne</gateone-link>\" (Pentium fork):\n　○ Fixed cursor and pointer operation bugs in the web terminal emulator."
    },
    "bibian": {
      "companyName": "PChome Bibian Inc",
      "jobTitle": "Front-end Developer",
      "period": "2022.4 - 2022.10",
      "instruction": "● Use next.js & Redux to build front-end system\n● Write unit tests with Jest & component tests with React Testing Library\n● Use Husky with Eslint, Prettier & Jest to practice git commit automated testing and correction\n● Use swiper to achieve carousel effect\n● According to the Figma provided by the design, use styled-components to make the page\n● Planning api with back-end developer\n\nProject:\n● Develop \"<drug-link>Drug Bibian</drug-link>\":\n　○ Project Construction\n　○ Mainly responsible for the home page and product page\n　○ Write the product data structure that \"BBC bar\" can parse, which can reduce the cost of parsing and development, and can be tested\n\n● Maintain \"<bbcheckout-link>Cross-border Purchase Service</bbcheckout-link>\":\n　○ Parse the HTML document of the partner e-commerce, and convert the product page into a data that can be used by the \"BBC bar\"\n　○ Refactoring projects using Web Components\n　　■ Reduce development costs by 90%, and more as demand increases\n　　■ Reduce initial page load speed\n\n● Maintain \"Product Inclusion Tool - Chrome Extension\":\n　○ Optimize webpack to increase building speed\n　○ Repurchase and optimization projects\n　　■ Split component, page\n　　■ Integration api, \"chrome.runtime.sendMessage\"\n　　■ Form validation into \"custom hook\"\n　　■ Fix bugs\n\n● Refactored \"<bbcstore-link>Buy on Demand</bbcstore-link>\" channel (refactored version is not online):\n　○ Divide component blocks, so that the background can be set for different blocks, providing customized web page layout\n　○ Can reduce development costs by 90%, and can continue to create new blocks with designers\n　○ Use \"React Hook Form\" for form validation and provide background form filling function\n　○ For the purpose of reduce the first load of the page, practice infinite scrolling of the page\n　○ The background setting interface provides the component dragging function to adjust the order of products\n　○ UI/UX optimization"
    },
    "bankpro": {
      "companyName": "BackPro E-Service Technology Co., Ltd.",
      "jobTitle": "Front-end Developer",
      "period": "2020.2 - 2022.3",
      "instruction": "● Development of <sunnybank-link>sunnybank Enterprise Internet Bank</sunnybank-link>:\n　○ Mainly responsible for functions: account transaction inquiry, user management settings and transfer transaction functions in Taiwan and foreign currencies\n　○ Use \"formik\" for form validation, providing form filling functions\n　○ Connect the card reader to handle authentication and set the chip card password\n　○ \".csv\" and \".txt\" file download, web friendly printing\n　○ Use \"react-intl\" to implement multiple languages\n　○ Analysis and planning of redux and saga code splitting can reduce the first code load, which is estimated to be reduced by more than 50%\n　○ The code provided by the outsourcers is integrated into the React project, and UI/UX optimization if necessary"
    },
    "arcoa": {
      "companyName": "ARCOA",
      "jobTitle": "Software Engineer",
      "period": "2018.1 - 2020.1",
      "instruction": "● Develop & Maintain two \"WMS warehouse management systems\"\n● Fetch customer API\n● Develop task scheduler to get data from database, and send mail to customer or user"
    }
  }
}
